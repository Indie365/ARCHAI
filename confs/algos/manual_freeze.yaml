__include__: 'darts.yaml' # just use darts defaults


nas:
  eval:
    model_factory_spec: 'resnet18'

    #darts loader/trainer
    loader:
      train_batch: 128 #96
      cutout: 0
    trainer:
      plotsdir: ''
      aux_weight: 0.0
      grad_clip: 0.0
      drop_path_prob: 0.0 # probability that given edge will be dropped
      epochs: 200
      optimizer:
        type: 'sgd'
        lr: 0.0333 #0.025 # init learning rate
        decay: 3.0e-4 # pytorch default is 0.0
        momentum: 0.9 # pytorch default is 0.0
        nesterov: False # pytorch default is False
        warmup: null
      lr_schedule:
        type: 'cosine'
        min_lr: 0.001 # min learning rate to be set in eta_min param of scheduler
      proxynas:
        val_top1_acc_threshold: 0.80 # after some accuracy we will shift into training only the last layer
        freeze_epochs: 200
        freeze_lr: 0.001
        freeze_decay: 0.0
        freeze_momentum: 0.0
        train_regular: False
        identifiers_to_unfreeze: ['fc', 'bn']
        aux_weight: 0.0 # disable auxiliary loss part during finetuning

    
    