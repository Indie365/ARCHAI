__include__: 'darts.yaml' # just use darts defaults

nas:
  search:
    model_desc:
      num_edges_to_sample: 2 # number of edges each node will take input from

  eval:
    dartsspace:
      arch_index: 66
    model_desc:
      aux_weight: False # AuxTower class assumes specific input size hence breaks with many datasets.
      num_edges_to_sample: 2
      n_cells: 8
      n_reductions: 0 # for dense task we want output at the same resolution as input
      model_post_op: 'identity' # no pooling at the end as we want dense output
      logits_op: 'proj_channels_no_bn' # reduce channels to 1 and keep same resolution as input. we don't really have 'logits' here as we are doing dense classification.
    loader:
      aug: ''
      cutout: -1 # cutout length, use cutout augmentation when > 0
      val_ratio: 0.0
      train_batch: 96
      use_sampler: False # distributed stratified sampler is not compatible with dense tasks
    trainer:
      use_val: False
      plotsdir: ''
      epochs: 3
      lossfn:
        type: 'L2Loss'
      validation:
        lossfn:
          type: 'L2Loss'